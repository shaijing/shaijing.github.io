<?xml version="1.0" encoding="utf-8"?>






<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>The Rain Pavilion</title>
        <link>https://blog.etamin.xyz/</link>
        <description>MemE 是一个强大且可高度定制的 GoHugo 博客主题，专为个人博客设计。</description>
        <generator>Hugo 0.115.4 https://gohugo.io/</generator>
        
            <language>zh-CN</language>
        
        
            <managingEditor>yulingsc@outlook.com (Ling Yu)</managingEditor>
        
        
            <webMaster>yulingsc@outlook.com (Ling Yu)</webMaster>
        
        
            <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</copyright>
        
        <lastBuildDate>Sat, 29 Jul 2023 15:20:18 &#43;0800</lastBuildDate>
        
            <atom:link rel="self" type="application/rss&#43;xml" href="https://blog.etamin.xyz/rss.xml" />
        
        
            <item>
                <title>Arch Linux</title>
                <link>https://blog.etamin.xyz/posts/linux/centos-stream/</link>
                <guid isPermaLink="true">https://blog.etamin.xyz/posts/linux/centos-stream/</guid>
                <pubDate>Sat, 29 Jul 2023 13:14:36 &#43;0800</pubDate>
                
                    <author>yulingsc@outlook.com (Ling Yu)</author>
                
                <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</copyright>
                
                    <description>&lt;h2 id=&#34;启用epel-release源&#34;&gt;启用epel-release源&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# centos 9 stream 版本&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dnf config-manager --set-enabled crb
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dnf install epel-release epel-next-release
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# RHEL 9.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;subscription-manager repos --enable codeready-builder-for-rhel-9-&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;arch&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;-rpms
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dnf install https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# AlmaLinux 9&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dnf config-manager --set-enabled crb
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dnf install epel-release
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
                
                
                
                    
                    
                    
                        
                        
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://blog.etamin.xyz/categories/linux/">linux</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="https://blog.etamin.xyz/tags/centos/">centos</category>
                                
                            
                                
                                
                                
                                    <category domain="https://blog.etamin.xyz/tags/linux/">linux</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>debian linux</title>
                <link>https://blog.etamin.xyz/posts/linux/debian/</link>
                <guid isPermaLink="true">https://blog.etamin.xyz/posts/linux/debian/</guid>
                <pubDate>Sat, 29 Jul 2023 13:14:36 &#43;0800</pubDate>
                
                    <author>yulingsc@outlook.com (Ling Yu)</author>
                
                <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</copyright>
                
                    <description>&lt;h1 id=&#34;debian安装后工作&#34;&gt;debian安装后工作&lt;/h1&gt;
&lt;h2 id=&#34;添加sudo权限&#34;&gt;添加sudo权限&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;su - root
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;chmod &lt;span class=&#34;m&#34;&gt;666&lt;/span&gt; /etc/sudoers
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vim /etc/sudoers
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 在root下添加&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;username&amp;gt; &lt;span class=&#34;nv&#34;&gt;ALL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=(&lt;/span&gt;ALL:ALL&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; NOPASSWD:ALL
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# :wq&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;chmod &lt;span class=&#34;m&#34;&gt;440&lt;/span&gt; /etc/sudoers
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;winlinux双系统时间设置&#34;&gt;win,linux双系统时间设置&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;系统时间与硬件时间&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Linux系统中有两个时间概念，系统时间与硬件时间。&lt;/p&gt;
&lt;p&gt;硬件时间就是BIOS中的时间，视为UTC 0时区，可以用hwclock来查看硬件时间。&lt;/p&gt;
&lt;p&gt;系统时间即用date命令查看到的时间，这个时间是系统通过读取BIOS时间并根据系统中的设定的时区来确定的。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;修改/etc/adjtime&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;将BIOS时间视为本地时间，关闭debian中的UTC选项。很多文章提到修改/etc/default/rcS中的UTC=no，这是debian 6的设置方法，而debian12中将这个选项放在了/etc/adjtime文件中，若没有这个文件，可用命令 $sudo hwclock --adjust 来生成。然后将第三行由UTC改为LOCAL。&lt;/p&gt;
</description>
                
                
                
                    
                    
                    
                        
                        
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://blog.etamin.xyz/categories/linux/">linux</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="https://blog.etamin.xyz/tags/debian/">debian</category>
                                
                            
                                
                                
                                
                                    <category domain="https://blog.etamin.xyz/tags/linux/">linux</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>scp</title>
                <link>https://blog.etamin.xyz/posts/linux/ssh_file_transfer/</link>
                <guid isPermaLink="true">https://blog.etamin.xyz/posts/linux/ssh_file_transfer/</guid>
                <pubDate>Sat, 29 Jul 2023 12:32:46 &#43;0800</pubDate>
                
                    <author>yulingsc@outlook.com (Ling Yu)</author>
                
                <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</copyright>
                
                    <description>&lt;h1 id=&#34;命令格式&#34;&gt;命令格式&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; scp &amp;lt;sourceFile&amp;gt; &amp;lt;targetFile&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;常用格式&#34;&gt;常用格式&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;-P [port] : 指定SSH端口号&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;-r : 递归复制整个目录&lt;/p&gt;
&lt;/blockquote&gt;
</description>
                
                
                
                    
                    
                    
                        
                        
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://blog.etamin.xyz/categories/linux/">linux</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="https://blog.etamin.xyz/tags/scp/">scp</category>
                                
                            
                                
                                
                                
                                    <category domain="https://blog.etamin.xyz/tags/ssh/">ssh</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>yum dnf</title>
                <link>https://blog.etamin.xyz/posts/linux/yum/</link>
                <guid isPermaLink="true">https://blog.etamin.xyz/posts/linux/yum/</guid>
                <pubDate>Sat, 29 Jul 2023 12:32:46 &#43;0800</pubDate>
                
                    <author>yulingsc@outlook.com (Ling Yu)</author>
                
                <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</copyright>
                
                    <description>&lt;h1 id=&#34;清除系统yum缓存并重新生成新的yum缓存&#34;&gt;清除系统yum缓存，并重新生成新的yum缓存&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dnf -y install epel-release
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dnf clean all
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dnf makecache
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dnf repolist
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
                
                
                
                    
                    
                    
                        
                        
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://blog.etamin.xyz/categories/linux/">linux</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="https://blog.etamin.xyz/tags/package-manner/">package manner</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>nala</title>
                <link>https://blog.etamin.xyz/posts/linux/nala/</link>
                <guid isPermaLink="true">https://blog.etamin.xyz/posts/linux/nala/</guid>
                <pubDate>Sat, 29 Jul 2023 09:02:56 &#43;0800</pubDate>
                
                    <author>yulingsc@outlook.com (Ling Yu)</author>
                
                <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</copyright>
                
                    <description>&lt;h1 id=&#34;nala介绍-1&#34;&gt;Nala介绍 &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;https://blog.etamin.xyz/posts/linux/nala/#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/h1&gt;
&lt;p&gt;Nala 包管理器的关键功能之一是nala History命令，它改变了我个人对在 APT 上使用它的想法，它类似于您在基于 RedHat 的系统（如Fedora）中找到的dnf History命令。
该命令在/var/lib/nala/history.jsonnala history中记录每个事务的日志，稍后可用于撤消或重做更改。&lt;/p&gt;
&lt;h2 id=&#34;在-linux-上安装-nala&#34;&gt;在 Linux 上安装 Nala&lt;/h2&gt;
&lt;h3 id=&#34;从官方存储库安装-nala-debian12&#34;&gt;从官方存储库安装 Nala [Debian12]&lt;/h3&gt;
&lt;p&gt;如果系统运行的是Debian12, Ubuntu 22.04 或 Ubuntu-derviaties，您可以通过执行如下所示的一行命令来快速安装 Nala：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt install nala
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;添加自定义存储库推荐&#34;&gt;添加自定义存储库[推荐]&lt;/h3&gt;
&lt;p&gt;这是在运行旧版本 Ubuntu 或 Debian 的计算机上安装 Nala 的首选且最简单的方法，因此您所要做的就是按照下面列出的步骤按列出的顺序进行操作。&lt;/p&gt;
&lt;p&gt;将以下命令复制并粘贴到系统的终端中以添加Volian Scar 存储库，稍后您可以从中安装 Nala。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;deb [arch=amd64,arm64,armhf] http://deb.volian.org/volian/ scar main&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sudo tee /etc/apt/sources.list.d/volian-archive-scar-unstable.list
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;接下来，添加GPG密钥进行验证，如下所示：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget -qO - https://deb.volian.org/volian/scar.key &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sudo tee /etc/apt/trusted.gpg.d/volian-archive-scar-unstable.gpg &amp;gt; /dev/null
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;对于 Ubuntu 22.04/Debian 及更高版本，您需要执行以下命令，这将首先更新您的系统存储库，然后安装nala。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt update &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo apt install nala -y
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;如果您使用的是 Ubuntu 21.04 或 Debian Stable 等旧版本，那么您应该调用以下命令，该命令将安装： nala-legacy&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt update &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo apt install nala-legacy
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;使用-pacstall-安装-nala-包管理器&#34;&gt;使用 Pacstall 安装 Nala 包管理器&lt;/h3&gt;
&lt;h3 id=&#34;使用-debian-软件包安装-nala-软件包管理器&#34;&gt;使用 Debian 软件包安装 Nala 软件包管理器&lt;/h3&gt;
&lt;p&gt;如果您不喜欢上述方法，那么您还可以&lt;a href=&#34;https://gitlab.com/volian/nala/-/releases&#34;&gt;下载&lt;/a&gt;“deb”包并使用apt或dpkg命令在本地安装，无需互联网连接。&lt;/p&gt;
&lt;p&gt;从发布页面下载软件包后，您可以执行以下任意命令来安装 Nala：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt install /path/to/nala_version_arch.deb
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#OR&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo dpkg -i /path/to/nala_version_arch.deb
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt install -f
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://trendoceans.com/nala-package-manager/&#34;&gt;https://trendoceans.com/nala-package-manager/&lt;/a&gt;&amp;#160;&lt;a href=&#34;https://blog.etamin.xyz/posts/linux/nala/#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
                
                
                
                    
                    
                    
                        
                        
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://blog.etamin.xyz/categories/linux/">linux</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="https://blog.etamin.xyz/tags/linux/">linux</category>
                                
                            
                                
                                
                                
                                    <category domain="https://blog.etamin.xyz/tags/nala/">nala</category>
                                
                            
                                
                                
                                
                                    <category domain="https://blog.etamin.xyz/tags/package-manner/">package manner</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>Sql</title>
                <link>https://blog.etamin.xyz/posts/learn/sql/</link>
                <guid isPermaLink="true">https://blog.etamin.xyz/posts/learn/sql/</guid>
                <pubDate>Fri, 23 Jun 2023 08:10:57 &#43;0800</pubDate>
                
                    <author>yulingsc@outlook.com (Ling Yu)</author>
                
                <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</copyright>
                
                    <description>&lt;h1 id=&#34;数据库知识点整理&#34;&gt;数据库知识点整理&lt;/h1&gt;
&lt;h2 id=&#34;1-基础&#34;&gt;1. 基础&lt;/h2&gt;
&lt;p&gt;函数依赖的概念：设$R&lt;U&gt;$是属性集$U$上的关系模式，$X,Y \subseteq U$，若对于$R&lt;U&gt;$的任意一个可能关系$r$，$r$中有两个元组$t_1$和$t_2$，若$t_1[X]=t_2[X]$，则必有$t_1[Y]=t_2[Y]$，则称$Y$函数依赖于$X$，记作$X \rightarrow Y$。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;x唯一决定元组时，y函数依赖于x&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在$R&lt;U&gt;$中，如果$X \rightarrow Y$，并且对于$X$的任意一个真子集$X&#39;$，都有$X&#39; \nrightarrow Y$，则称$Y$对$X$完全函数依赖，记作：$X \xrightarrow{F}Y$；若$X \rightarrow Y$，但是$Y$不完全函数依赖于$X$，则称$Y$对$X$部分函数依赖，记作：$X \xrightarrow{P} Y$。&lt;/p&gt;
&lt;p&gt;在$R&lt;U&gt;$中，如果$X \rightarrow Y,\quad (Y \nsubseteq X),Y \nrightarrow X,Y\rightarrow Z$，则称$Z$对$X$传递函数依赖，记作：$X \xrightarrow{传递} Z$。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;键字=码字，所以 主键=主码=主关键字，候选键=候选码=候选关键字…&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;码（superkey）：即能唯一标识元组的属性或属性组，称为码。&lt;/li&gt;
&lt;li&gt;候选码（candidate key）：能够唯一标识一条记录的最小属性集，即不含有多余属性的码称为候选码。&lt;/li&gt;
&lt;li&gt;主码（primary key）：某个能够唯一标识一条记录的最小属性集，即在候选码的基础上，选择一个作为主码。&lt;/li&gt;
&lt;li&gt;主属性：包含在任一候选码中的属性称为主属性。简单来说，主属性是候选码所有属性的并集。&lt;/li&gt;
&lt;li&gt;非主属性：不包含在任一候选码中的属性称为非主属性。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;2-范式&#34;&gt;2. 范式&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;第一范式（1NF）：关系模式$R$，其所有属性不可再分，即属性不可再分成更小的属性。&lt;/li&gt;
&lt;li&gt;第二范式（2NF）：$R \in 1NF$,且每一个非主属性完全依赖于码，而不能部分依赖于码。&lt;/li&gt;
&lt;li&gt;第三范式（3NF）：$R \in 2NF$,且非主属性不传递依赖于码。&lt;/li&gt;
&lt;li&gt;BCNF：在第三范式的基础上，消除主属性对候选码的部分函数依赖。&lt;/li&gt;
&lt;/ol&gt;
</description>
                
                
                
                    
                    
                    
                        
                        
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://blog.etamin.xyz/categories/learn/">learn</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="https://blog.etamin.xyz/tags/sql/">sql</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>Xifalu</title>
                <link>https://blog.etamin.xyz/posts/live/xifalu/</link>
                <guid isPermaLink="true">https://blog.etamin.xyz/posts/live/xifalu/</guid>
                <pubDate>Fri, 19 May 2023 14:41:59 &#43;0800</pubDate>
                
                    <author>yulingsc@outlook.com (Ling Yu)</author>
                
                <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</copyright>
                
                    <description>&lt;h2 id=&#34;去屑杀菌剂&#34;&gt;去屑杀菌剂&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;水杨酸 加速头皮的一些废旧物质的脱落&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;吡罗克酮乙醇胺盐&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;吡硫鍮錦（ZPT）（有风险）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;吡硫鎓锌&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;氯咪巴唑&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;酮康唑洗剂、&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;二硫化硒洗剂、&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;煤焦油洗剂&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;防腐剂&#34;&gt;防腐剂&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;甲基异噻唑啉酮&lt;/li&gt;
&lt;li&gt;甲基氯异噻唑啉酮&lt;/li&gt;
&lt;li&gt;DMDM 乙内酰脲&lt;/li&gt;
&lt;li&gt;咪唑烷基脲&lt;/li&gt;
&lt;/ul&gt;
</description>
                
                
                
                    
                    
                    
                        
                        
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://blog.etamin.xyz/categories/%E7%94%9F%E6%B4%BB/">生活</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="https://blog.etamin.xyz/tags/live/">live</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>Lingo</title>
                <link>https://blog.etamin.xyz/posts/math/lingo/</link>
                <guid isPermaLink="true">https://blog.etamin.xyz/posts/math/lingo/</guid>
                <pubDate>Wed, 17 May 2023 15:46:27 &#43;0800</pubDate>
                
                    <author>yulingsc@outlook.com (Ling Yu)</author>
                
                <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</copyright>
                
                    <description>&lt;h2 id=&#34;一lingo中的集&#34;&gt;一.LINGO中的集&lt;/h2&gt;
&lt;p&gt;  集是一群相互联系的对象，这些对象也称为集的成员，每个集成员可能有一个或多个与之有关联的特征，我们把这些特征称为属性。属性值可以预先给定，也可以是未知的，有待于LINGO求解。借助于集，能够用一个单一的、长的、简明的复合公式表示一系列相似的约束，从而可以快速方便地表达规模较大的模型。一个集可能是一系列产品、卡车或雇员。每个集成员可能有一个或多个与之有关联的特征，我们把这些特征称为属性。属性值可以预先给定，也可以是未知的，有待于LINGO求解。例如，产品集中的每个产品可以有一个价格属性；卡车集中的每辆卡车可以有一个牵引力属性；雇员集中的每位雇员可以有一个薪水属性，也可以有一个生日属性等等。&lt;/p&gt;
&lt;p&gt;集以关键字“sets:”开始，以“endsets”结束。&lt;/p&gt;
&lt;p&gt;原始集：由一些最基本的对象组成的。&lt;/p&gt;
&lt;p&gt;派生集：用一个或多个其它集来定义的，也就是说，它的成员来自于其它已存在的集。
&lt;img src=&#34;https://blog.etamin.xyz/assets/2022-11-04-13-03-26.png&#34; alt=&#34;1&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;模型的集部分&#34;&gt;模型的集部分&lt;/h3&gt;
&lt;p&gt;  集部分是LINGO模型的一个可选部分。在LINGO模型中使用集之前，必须在集部分事先定义。集部分以关键字“sets:”开始，以“endsets”结束。一个模型可以没有集部分，或有一个简单的集部分，或有多个集部分。一个集部分可以放置于模型的任何地方，但是一个集及其属性在模型约束中被引用之前必须定义了它们。&lt;/p&gt;
&lt;h3 id=&#34;定义原始集&#34;&gt;定义原始集:&lt;/h3&gt;
&lt;p&gt;为了定义一个原始集，必须详细声明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;集的名字&lt;/li&gt;
&lt;li&gt;可选，集的成员&lt;/li&gt;
&lt;li&gt;可选，集成员的属性
&lt;img src=&#34;https://blog.etamin.xyz/assets/2022-11-04-13-02-21.png&#34; alt=&#34;2&#34;&gt;
定义一个原始集，用下面的语法：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-lingo&#34; data-lang=&#34;lingo&#34;&gt;setname[/member_list/][:attribute_list];
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;注意：用“[]”表示该部分内容可选。下同，不再赘述。&lt;/em&gt;
  Setname是你选择的来标记集的名字，最好具有较强的可读性。集名字必须严格符合标准命名规则：以拉丁字母或下划线（_）为首字符，其后由拉丁字母（A—Z）、下划线、阿拉伯数字（0，1，…，9）组成的总长度不超过32个字符的字符串，且不区分大小写。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;注意：该命名规则同样适用于集成员名和属性名等的命名。&lt;/em&gt;
  Member_list是集成员列表。如果集成员放在集定义中，那么对它们可采取显式罗列和隐式罗列两种方式。如果集成员不放在集定义中，那么可以在随后的数据部分定义它们。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当显式罗列成员时，必须为每个成员输入一个不同的名字，中间用空格或逗号搁开，允许混合使用。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;例2.1 可以定义一个名为students的原始集，它具有成员John、Jill、Rose和Mike，属性有sex和age：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-lingo&#34; data-lang=&#34;lingo&#34;&gt;sets:
students/John  Jill, Rose  Mike/: sex, age;
endsets
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;当隐式罗列成员时，不必罗列出每个集成员。可采用如下语法：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-lingo&#34; data-lang=&#34;lingo&#34;&gt;setname/member1..memberN/[: attribute_list];
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这里的member1是集的第一个成员名，memberN是集的最末一个成员名。LINGO将自动产生中间的所有成员名。LINGO也接受一些特定的首成员名和末成员名，用于创建一些特殊的集。列表如下：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;隐式成员列表格式&lt;/th&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;th&gt;所产生集成员&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1..n&lt;/td&gt;
&lt;td&gt;1..5&lt;/td&gt;
&lt;td&gt;1,2,3,4,5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;StringM..StringN&lt;/td&gt;
&lt;td&gt;Car2..Car14&lt;/td&gt;
&lt;td&gt;Car2,Car3,Car4,…,Car14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DayM..DayN&lt;/td&gt;
&lt;td&gt;Mon..Fri&lt;/td&gt;
&lt;td&gt;Mon,Tue,Wed,Thu,Fri&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MonthM..MonthN&lt;/td&gt;
&lt;td&gt;Oct..Jan&lt;/td&gt;
&lt;td&gt;Oct,Nov,Dec,Jan&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MonthYearM..MonthYearN&lt;/td&gt;
&lt;td&gt;Oct2001..Jan2002&lt;/td&gt;
&lt;td&gt;ct2001,Nov2001,Dec2001,Jan2002&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;集成员不放在集定义中，而在随后的&lt;strong&gt;数据部分&lt;/strong&gt;来定义。
例2.2&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-lingo&#34; data-lang=&#34;lingo&#34;&gt;!集部分;
sets:
  students:sex,age;
endsets
!数据部分;
data:
  students,sex,age= John 1 16
                    Jill 0 14
                    Rose 0 17
                    Mike 1 13;
enddata
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;  &lt;em&gt;注意：开头用感叹号（!），末尾用分号（;）表示注释，可跨多行。&lt;/em&gt;
  在集部分只定义了一个集students，并未指定成员。在数据部分罗列了集成员John、Jill、Rose和Mike，并对属性sex和age分别给出了值。
  集成员无论用何种字符标记,它的索引都是从1开始连续计数。在attribute_ l`ist可以指定一个或多个集成员的属性，属性之间必须用逗号隔开。&lt;/p&gt;
&lt;h3 id=&#34;定义派生集&#34;&gt;定义派生集：&lt;/h3&gt;
&lt;p&gt;为了定义一个派生集，必须详细声明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;集的名字&lt;/li&gt;
&lt;li&gt;父集的名字&lt;/li&gt;
&lt;li&gt;可选，集成员&lt;/li&gt;
&lt;li&gt;可选，集成员的属性
可用下面的语法定义一个派生集：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-lingo&#34; data-lang=&#34;lingo&#34;&gt;setname(parent_set_list)[/member_list/][:attribute_list];
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;  setname是集的名字。parent_set_list是已定义的集的列表，多个时必须用逗号隔开。如果没有指定成员列表，那么LINGO会自动创建父集成员的所有组合作为派生集的成员。派生集的父集既可以是原始集，也可以是其它的派生集。&lt;/p&gt;
&lt;p&gt;例2.3&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-lingo&#34; data-lang=&#34;lingo&#34;&gt;sets:
  product/A B/;
  machine/M N/;
  week/1..2/;
  allowed(product,machine,week):x;
endsets
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;LINGO生成了三个父集的所有组合共八组作为allowed集的成员。列表如下：
编号         成员
1        1                                    (A,M,1)
2	2                            (A,M,2)
3	3                            (A,N,1)
4	4                            (A,N,2)
5	5                            (B,M,1)
6	6                            (B,M,2)
7	7                            (B,N,1)
8	8                            (B,N,2)&lt;/p&gt;
&lt;p&gt;稠密集：派生集成员由父集成员所有的组合构成。&lt;/p&gt;
&lt;p&gt;稀疏集：如果限制派生集的成员，使它成为父集成员所有组合构成的集合的一个子集。&lt;/p&gt;
&lt;p&gt;显式罗列：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-lingo&#34; data-lang=&#34;lingo&#34;&gt;allowed(product,machine,week)/A M 1,A N 2,B N 1/;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;  成员列表被忽略时，派生集成员由父集成员所有的组合构成，这样的派生集成为稠密集。如果限制派生集的成员，使它成为父集成员所有组合构成的集合的一个子集，这样的派生集成为稀疏集。同原始集一样，派生集成员的声明也可以放在数据部分。一个派生集的成员列表有两种方式生成：①显式罗列；②设置成员资格过滤器。当采用方式①时，必须显式罗列出所有要包含在派生集中的成员，并且罗列的每个成员必须属于稠密集。使用前面的例子，显式罗列派生集的成员：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-lingo&#34; data-lang=&#34;lingo&#34;&gt;allowed(product,machine,week)/A M 1,A N 2,B N 1/;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果需要生成一个大的、稀疏的集，那么显式罗列就很讨厌。幸运地是许多稀疏集的成员都满足一些条件以和非成员相区分。我们可以把这些逻辑条件看作过滤器，在LINGO生成派生集的成员时把使逻辑条件为假的成员从稠密集中过滤掉。&lt;/p&gt;
&lt;p&gt;例2.4
如果需要生成一个大的、稀疏的集，则利用过滤器:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-lingo&#34; data-lang=&#34;lingo&#34;&gt;sets：
!学生集：性别属性sex，1表示男性，0表示女性；年龄属性age.  ;
students/John,Jill,Rose,Mike/:sex,age;
!男学生和女学生的联系集：友好程度属性friend，[0，1]之间的数。;
linkmf(students,students)|sex(&amp;amp;1) #eq# 1 #and# sex(&amp;amp;2) #eq# 0: friend;
!男学生和女学生的友好程度大于0.5的集;
linkmf2(linkmf) | friend(&amp;amp;1,&amp;amp;2) #ge# 0.5 : x;
endsets

data:
sex,age = 1 16
	0 14
	0 17
	0 13;
friend = 0.3 0.5 0.6;
enddata
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;  用竖线（|）来标记一个成员资格过滤器的开始。#eq#是逻辑运算符，用来判断是否“相等”，可参考§4. &amp;amp;1可看作派生集的第1个原始父集的索引，它取遍该原始父集的所有成员；&amp;amp;2可看作派生集的第2 个原始父集的索引，它取遍该原始父集的所有成员；&amp;amp;3，&amp;amp;4，……，以此类推。注意如果派生集B的父集是另外的派生集A，那么上面所说的原始父集是集A向前回溯到最终的原始集，其顺序保持不变，并且派生集A的过滤器对派生集B仍然有效。因此，派生集的索引个数是最终原始父集的个数，索引的取值是从原始父集到当前派生集所作限制的总和。&lt;/p&gt;
&lt;p&gt;  总的来说，LINGO可识别的集只有两种类型：原始集和派生集。
  在一个模型中，原始集是基本的对象，不能再被拆分成更小的组分。原始集可以由显式罗列和隐式罗列两种方式来定义。当用显式罗列方式时，需在集成员列表中逐个输入每个成员。当用隐式罗列方式时，只需在集成员列表中输入首成员和末成员，而中间的成员由LINGO产生。
  另一方面，派生集是由其它的集来创建。这些集被称为该派生集的父集（原始集或其它的派生集）。一个派生集既可以是稀疏的，也可以是稠密的。稠密集包含了父集成员的所有组合（有时也称为父集的笛卡尔乘积）。稀疏集仅包含了父集的笛卡尔乘积的一个子集，可通过显式罗列和成员资格过滤器这两种方式来定义。显式罗列方法就是逐个罗列稀疏集的成员。成员资格过滤器方法通过使用稀疏集成员必须满足的逻辑条件从稠密集成员中过滤出稀疏集的成员。不同集类型的关系见下图。&lt;/p&gt;
&lt;h2 id=&#34;基本运算符&#34;&gt;基本运算符&lt;/h2&gt;
&lt;h3 id=&#34;一算术运算符&#34;&gt;一.算术运算符&lt;/h3&gt;
&lt;p&gt;LINGO具有９种逻辑运算符：
算术运算符是针对数值进行操作的。LINGO提供了5种二元运算符：
＾　乘方
﹡　乘
／　除
﹢　加
﹣　减&lt;/p&gt;
&lt;p&gt;LINGO唯一的一元算术运算符是取反函数“﹣”。
这些运算符的优先级由高到底为：
高	﹣（取反）
＾
﹡／
低	﹢﹣
运算符的运算次序为从左到右按优先级高低来执行。运算的次序可以用圆括号“（）”来改变。
例4.1 算术运算符示例。
2﹣5／3，(2﹢4)／5等等。&lt;/p&gt;
&lt;h3 id=&#34;二逻辑运算符&#34;&gt;二.逻辑运算符&lt;/h3&gt;
&lt;p&gt;在LINGO中，逻辑运算符主要用于集循环函数的条件表达式中，来控制在函数中哪些集成员被包含，哪些被排斥。在创建稀疏集时用在成员资格过滤器中。
LINGO具有９种逻辑运算符：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;#not# 否定该操作数的逻辑值，＃not＃是一个一元运算符&lt;/li&gt;
&lt;li&gt;#eq# 若两个运算数相等，则为true；否则为flase&lt;/li&gt;
&lt;li&gt;#ne# 若两个运算符不相等，则为true；否则为flase&lt;/li&gt;
&lt;li&gt;#gt# 若左边的运算符严格大于右边的运算符，则为true；否则为flase&lt;/li&gt;
&lt;li&gt;#ge# 若左边的运算符大于或等于右边的运算符，则为true；否则为flase&lt;/li&gt;
&lt;li&gt;#lt# 若左边的运算符严格小于右边的运算符，则为true；否则为flase&lt;/li&gt;
&lt;li&gt;#le# 若左边的运算符小于或等于右边的运算符，则为true；否则为flase&lt;/li&gt;
&lt;li&gt;#and# 仅当两个参数都为true时，结果为true；否则为flase&lt;/li&gt;
&lt;li&gt;#or# 仅当两个参数都为false时，结果为false；否则为true&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些运算符的优先级由高到低为：
高	#not#
#eq# #ne# #gt# #ge# #lt# #le#
低	#and# #or#&lt;/p&gt;
&lt;h3 id=&#34;三关系运算符&#34;&gt;三.关系运算符&lt;/h3&gt;
&lt;p&gt;在LINGO中，关系运算符主要是被用在模型中，来指定一个表达式的左边是否等于、小于等于、或者大于等于右边，形成模型的一个约束条件。关系运算符与逻辑运算符#eq#、#le#、#ge#截然不同，前者是模型中该关系运算符所指定关系的为真描述，而后者仅仅判断一个该关系是否被满足：满足为真，不满足为假。
LINGO有三种关系运算符：“=”、“&amp;lt;=”和“&amp;gt;=”。LINGO中还能用“&amp;lt;”表示小于等于关系，“&amp;gt;”表示大于等于关系。LINGO并不支持严格小于和严格大于关系运算符。然而，如果需要严格小于和严格大于关系，比如让A严格小于B：
A&amp;lt;B，
那么可以把它变成如下的小于等于表达式：
A+ε&amp;lt;=B，
这里ε是一个小的正数，它的值依赖于模型中A小于B多少才算不等。
下面给出以上三类操作符的优先级：
高	#not# ﹣（取反）
＾
﹡ ／
﹢﹣
#eq# #ne# #gt# #ge# #lt# #le#
#and# #or#
低	&amp;lt;= = &amp;gt;=&lt;/p&gt;
&lt;h2 id=&#34;数学函数&#34;&gt;数学函数&lt;/h2&gt;
&lt;p&gt;LINGO提供了大量的标准数学函数：
@abs(x) 	返回 x 的绝对值
@sin(x) 	返回 x 的正弦值， x 采用弧度制
@cos(x) 	返回 x 的余弦值
@tan(x) 	返回 x 的正切值
@exp(x)	返回常数 e 的 x 次方
@log(x)	返回 x 的自然对数
@lgm(x) 	返回 x 的 gamma 函数的自然对数
@sign(x)	如果 x&amp;lt;0 返回 -1 ；否则，返回 1
@floor(x) 	返回 x 的整数部分。当 x&amp;gt;=0 时，返回不超过 x 的最大整数；当 x&amp;lt;0 时，返回不低于 x 的最大整数。
@smax(x1,x2,...,xn)	返回 x1 ， x2 ， … ， xn 中的最大值
@smin(x1,x2,...,xn)	返回 x1 ， x2 ， … ， xn 中的最小值&lt;/p&gt;
&lt;p&gt;例 给定一个直角三角形，求包含该三角形的最小正方形。
解：如图所示。&lt;/p&gt;
&lt;p&gt;求最小的正方形就相当于求如下的最优化问题：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-lingo&#34; data-lang=&#34;lingo&#34;&gt;model:
sets:
  object/1..3/: f;
endsets
data:
  a, b = 3, 4; !两个直角边长，修改很方便;
enddata
  f(1) = a * @sin(x);
  f(2) = b * @cos(x);
  f(3) = a * @cos(x) + b * @sin(x);
  min = @smax(f(1),f(2),f(3));
  @bnd(0,x,1.57);
end
&lt;/code&gt;&lt;/pre&gt;</description>
                
                
                
                    
                    
                    
                        
                        
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://blog.etamin.xyz/categories/math/">math</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="https://blog.etamin.xyz/tags/math/">math</category>
                                
                            
                                
                                
                                
                                    <category domain="https://blog.etamin.xyz/tags/lingo/">lingo</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>matlab</title>
                <link>https://blog.etamin.xyz/posts/app/matlab/</link>
                <guid isPermaLink="true">https://blog.etamin.xyz/posts/app/matlab/</guid>
                <pubDate>Wed, 17 May 2023 12:42:14 &#43;0800</pubDate>
                
                    <author>yulingsc@outlook.com (Ling Yu)</author>
                
                <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</copyright>
                
                    <description>&lt;h1 id=&#34;matlab技巧&#34;&gt;Matlab技巧&lt;/h1&gt;
&lt;h2 id=&#34;1-matlab打开命令行窗口&#34;&gt;1. Matlab打开命令行窗口&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-matlab&#34; data-lang=&#34;matlab&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;matlab&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nosplash&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nodesktop&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;2-matlab命令行运行脚本&#34;&gt;2. Matlab命令行运行脚本&lt;/h2&gt;
&lt;p&gt;运行当前目录demo.m文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-matlab&#34; data-lang=&#34;matlab&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;matlab&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nosplash&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nodesktop&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sd&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wk&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &amp;#34;&lt;span class=&#34;n&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;.\demo.m&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
                
                
                
                    
                    
                    
                        
                        
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://blog.etamin.xyz/categories/app/">app</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="https://blog.etamin.xyz/tags/matlab/">matlab</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>Rust</title>
                <link>https://blog.etamin.xyz/posts/learn/rust/</link>
                <guid isPermaLink="true">https://blog.etamin.xyz/posts/learn/rust/</guid>
                <pubDate>Wed, 17 May 2023 12:42:14 &#43;0800</pubDate>
                
                    <author>yulingsc@outlook.com (Ling Yu)</author>
                
                <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</copyright>
                
                    <description>&lt;h2 id=&#34;rustup&#34;&gt;rustup&lt;/h2&gt;
&lt;h3 id=&#34;相关概念&#34;&gt;相关概念&lt;/h3&gt;
&lt;p&gt;rustup 将 rustc 和 cargo等工具安装在 Cargo 的 bin 目录（Unix系统在$HOME/.cargo/bin，Windows系统在%USERPROFILE%.cargo\bin），但这些工具只是 Rust 工具链中组件的代理，真正工作的是工具链中的组件。通过 rustup 的命令可以指定使用不同版本的工具链。&lt;/p&gt;
&lt;p&gt;与 rustup 相关的概念：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;channel —— Rust 发布在三个不同的&amp;quot;channel&amp;quot;上：stable，beta 和 nightly，其实就是三种不同的版本。&lt;/li&gt;
&lt;li&gt;toolchain —— 一套 Rust 组件，包括编译器及其相关工具，并且包含 channel，版本及支持的平台信息。&lt;/li&gt;
&lt;li&gt;target —— 指编译的目标平台，即：编译后的程序在哪种操作系统上运行。&lt;/li&gt;
&lt;li&gt;component —— toolchain 是由 component 组成的。&lt;/li&gt;
&lt;li&gt;profile —— 为了方便对 component 进行管理，使用 profile 定义一组 component。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;channels&#34;&gt;Channels&lt;/h3&gt;
&lt;p&gt;Rust 发布在三个不同的&amp;quot;channel&amp;quot;上：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;stable版本 —— Rust 的稳定版本，每 6 周发布一次。&lt;/li&gt;
&lt;li&gt;beta版本 —— Rust 的公开测试版本，将是下一个stable版本。&lt;/li&gt;
&lt;li&gt;nightly版本 —— 每天更新，包含以一些实验性的新特性。
通过 rustup 相关命令可以选择使用不同版本的 Rust，默认安装的是 stable 版本。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 切换到其他版本&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rustup default stable/nightly/beta
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;toolchains&#34;&gt;Toolchains&lt;/h3&gt;
&lt;p&gt;工具链的标准命名格式：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;channel&amp;gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;-&amp;lt;date&amp;gt;&lt;span class=&#34;o&#34;&gt;][&lt;/span&gt;-&amp;lt;host&amp;gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;channel&amp;gt;       &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; stable&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;beta&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;nightly&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&amp;lt;version&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;date&amp;gt;          &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; YYYY-MM-DD
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;host&amp;gt;          &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &amp;lt;target-triple&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;工具链默认被安装在RUSTUP_HOME （Unix系统：~/.rustup ，Windows系统：%USERPROFILE%/.rustup）目录下。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 查看所有工具链&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rustup toolchain list
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;components&#34;&gt;Components&lt;/h3&gt;
&lt;p&gt;工具链由若干组件构成，通过 rustup component list 命令可以查看所有可用和已经安装的组件。&lt;/p&gt;
&lt;p&gt;rustup 默认安装的组件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;rustc — Rust 编译器。&lt;/li&gt;
&lt;li&gt;rust-std — Rust 标准库。&lt;/li&gt;
&lt;li&gt;cargo — 包管理和构建工具，类似于 Java 的 Maven 和 Gradle。&lt;/li&gt;
&lt;li&gt;rust-docs — Rust 文档。&lt;/li&gt;
&lt;li&gt;rustfmt — 用来格式化 Rust 源代码。&lt;/li&gt;
&lt;li&gt;clippy — Rust 的代码检查工具。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;profiles&#34;&gt;Profiles&lt;/h3&gt;
&lt;p&gt;为了方便对 component 进行管理，使用 profile 定义一组 component。rustup 默认提供了三个 profile：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Profile&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Components&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;default&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;rustc, rust-std, cargo, rust-docs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;minimal&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;rustc, rust-std, cargo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;complete&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;rustc, rust-std, cargo, rust-docs, rustfmt, clippy&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;可以使用rustup set profile命令修改profile，比如：rustup set profile minimal&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 切换到minimal profile&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rustup &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; profile minimal
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;cargo使用&#34;&gt;cargo使用&lt;/h2&gt;
&lt;p&gt;常用的cargo命令&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用 cargo new 创建项目&lt;/li&gt;
&lt;li&gt;使用 cargo run 构建并运行项目&lt;/li&gt;
&lt;li&gt;使用 cargo check 快速检查代码是否可以通过编译&lt;/li&gt;
&lt;li&gt;使用 cargo build 构建项目&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;主要命令详解
build, b    构建当前包
check, c    分析当前包并报告错误，但不构建目标文件
clean       删除构建的目录
doc, d      构建当前包及其依赖项目的文档（会创建 &lt;code&gt;target/doc&lt;/code&gt; 目录，使用浏览器打开可以查看详细的文档）
new         创建一个新的包
init        在现有目录中创建一个新的包
add         添加依赖项到当前项目中
remove      从当前项目中删除依赖项
run, r      构建并运行项目
test, t     运行测试
bench       运行基准测试
update      更新在 Cargo.lock 注册的依赖项版本
search      搜索 crates
publish     打包并上传当前包 （crates.io）
install     安装 Rust 二进制文件，默认目录在 $HOME/.cargo/bin
uninstall   卸载 Rust 二进制文件
再补充几个 cargo 的重要子命令:&lt;/p&gt;
&lt;p&gt;cargo clippy: 类似eslint，lint工具检查代码可以优化的地方
cargo fmt: 类似go fmt，代码格式化
cargo tree: 查看第三方库的版本和依赖关系
cargo bench: 运行benchmark(基准测试,性能测试)
cargo udeps(第三方): 检查项目中未使用的依赖&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 创建项目&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cargo new hello_cargo
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; hello_cargo
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 编译并运行项目(debug)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cargo run hello_cargo
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# release模式&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cargo run --release mytest
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 编译项目(release)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cargo build --release
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;在开发过程中，如果只是想快速检查代码是否通过编译，而不需要实际编译可执行文件，可以使用下面这个命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cargo check
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
                
                
                
                    
                    
                    
                        
                        
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://blog.etamin.xyz/categories/learn/">learn</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="https://blog.etamin.xyz/tags/rust/">rust</category>
                                
                            
                                
                                
                                
                                    <category domain="https://blog.etamin.xyz/tags/cargo/">cargo</category>
                                
                            
                        
                    
                
            </item>
        
    </channel>
</rss>
