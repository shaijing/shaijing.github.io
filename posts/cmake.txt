1:HL["/_next/static/css/26e5e103248c0511.css",{"as":"style"}]
0:["p-301WNWXtmyuuJlb6sOQ",[[["",{"children":["posts",{"children":[["id","cmake","d"],{"children":["__PAGE__?{\"id\":\"cmake\"}",{}]}]}]},"$undefined","$undefined",true],"$L2",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/26e5e103248c0511.css","precedence":"next"}]],"$L3"]]]]
4:HL["/_next/static/css/6d53850f6c430e2d.css",{"as":"style"}]
5:I{"id":6816,"chunks":["726:static/chunks/7ce12eaa-8a54fcd3612adceb.js","754:static/chunks/754-c0b36751a47f8874.js","185:static/chunks/app/layout-7c745b0e38c60836.js"],"name":"","async":false}
6:I{"id":6339,"chunks":["726:static/chunks/7ce12eaa-8a54fcd3612adceb.js","754:static/chunks/754-c0b36751a47f8874.js","185:static/chunks/app/layout-7c745b0e38c60836.js"],"name":"","async":false}
7:I{"id":5612,"chunks":["272:static/chunks/webpack-f55cc60471d503cd.js","227:static/chunks/20e9c529-71751042407fa032.js","340:static/chunks/340-17ce4e6ebfbad5f2.js"],"name":"default","async":false}
8:I{"id":5120,"chunks":["272:static/chunks/webpack-f55cc60471d503cd.js","227:static/chunks/20e9c529-71751042407fa032.js","340:static/chunks/340-17ce4e6ebfbad5f2.js"],"name":"default","async":false}
9:I{"id":7335,"chunks":["335:static/chunks/335-9cb190579fdc0b86.js","722:static/chunks/app/posts/[id]/page-0bd7dfca260ba2e6.js"],"name":"Image","async":false}
b:I{"id":6608,"chunks":["726:static/chunks/7ce12eaa-8a54fcd3612adceb.js","754:static/chunks/754-c0b36751a47f8874.js","185:static/chunks/app/layout-7c745b0e38c60836.js"],"name":"","async":false}
a:T3867,<h1 id="ubuntu200等linux系统安装升级nginx"><a class="anchor" href="#ubuntu200等linux系统安装升级nginx"><span class="icon icon-link"></span></a>ubuntu20.0等linux系统安装升级nginx</h1>
<h2 id="1-安装包编译安装"><a class="anchor" href="#1-安装包编译安装"><span class="icon icon-link"></span></a>1 安装包编译安装</h2>
<h3 id="11-下载安装包"><a class="anchor" href="#11-下载安装包"><span class="icon icon-link"></span></a>1.1 下载安装包</h3>
<blockquote>
<p>去<a href="https://cmake.org/files/%E4%B8%8B%E8%BD%BD%E6%89%80%E9%9C%80%E7%89%88%E6%9C%AC%E7%9A%84%E6%BA%90%E7%A0%81%E3%80%82%E4%B9%9F%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8wget%E4%B8%8B%E8%BD%BD">https://cmake.org/files/下载所需版本的源码。也可以使用wget下载</a></p>
</blockquote>
<div data-rehype-pretty-code-fragment=""><pre style="background-color: #282c34" tabindex="0" data-language="bash" data-theme="default"><code class="code-highlight"><span class="code-line line-number" line="1"><span data-line=""><span style="color: #61AFEF">wget</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">https://cmake.org/files/v3.23/cmake-3.23.1.tar.gz</span></span></span></code></pre></div>
<p>解压</p>
<div data-rehype-pretty-code-fragment=""><pre style="background-color: #282c34" tabindex="0" data-language="bash" data-theme="default"><code class="code-highlight"><span class="code-line line-number" line="1"><span data-line=""><span style="color: #61AFEF">tar</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-xvzf</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">cmake-3.23.1.tar.gz</span></span></span></code></pre></div>
<p>安装必须依赖</p>
<div data-rehype-pretty-code-fragment=""><pre style="background-color: #282c34" tabindex="0" data-language="bash" data-theme="default"><code class="code-highlight"><span class="code-line line-number" line="1"><span data-line=""><span style="color: #61AFEF">apt</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">install</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">openssl</span></span>
</span><span class="code-line line-number" line="2"><span data-line=""><span style="color: #61AFEF">apt</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">install</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">libssl-dev</span></span></span></code></pre></div>
<p>进入解压目录，配置成功之后显示：CMake has bootstrapped. Now run make.</p>
<div data-rehype-pretty-code-fragment=""><pre style="background-color: #282c34" tabindex="0" data-language="bash" data-theme="default"><code class="code-highlight"><span class="code-line line-number" line="1"><span data-line=""><span style="color: #61AFEF">./configure</span></span></span></code></pre></div>
<p>编译安装</p>
<div data-rehype-pretty-code-fragment=""><pre style="background-color: #282c34" tabindex="0" data-language="bash" data-theme="default"><code class="code-highlight"><span class="code-line line-number" line="1"><span data-line=""><span style="color: #61AFEF">make</span><span style="color: #ABB2BF"> &#x26;&#x26; </span><span style="color: #61AFEF">make</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">install</span><span style="color: #ABB2BF"> </span><span style="color: #7F848E; font-style: italic"># 默认安装目录在/usr/local/bin</span></span></span></code></pre></div>
<h3 id="2-多版本配置"><a class="anchor" href="#2-多版本配置"><span class="icon icon-link"></span></a>2. 多版本配置</h3>
<p>通过update-alternatives建立文件关联
首先要让系统知道我们安装了多个版本的gcc</p>
<div data-rehype-pretty-code-fragment=""><pre style="background-color: #282c34" tabindex="0" data-language="bash" data-theme="default"><code class="code-highlight"><span class="code-line line-number" line="1"><span data-line=""><span style="color: #7F848E; font-style: italic"># 命令最后的 20和50是优先级，如果使用auto选择模式，系统将默认使用优先级高的</span></span>
</span><span class="code-line line-number" line="2"><span data-line=""><span style="color: #61AFEF">sudo</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">update-alternatives</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">--install</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">/usr/bin/cmake</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">cmake</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">/usr/bin/cmake</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">20</span></span>
</span><span class="code-line line-number" line="3"><span data-line=""><span style="color: #61AFEF">sudo</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">update-alternatives</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">--install</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">/usr/bin/cmake</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">cmake</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">/usr/local/bin/cmake</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">50</span></span></span></code></pre></div>
<h2 id="11-cmake构建"><a class="anchor" href="#11-cmake构建"><span class="icon icon-link"></span></a>1.1 cmake构建</h2>
<div data-rehype-pretty-code-fragment=""><pre style="background-color: #282c34" tabindex="0" data-language="bash" data-theme="default"><code class="code-highlight"><span class="code-line line-number" line="1"><span data-line=""><span style="color: #61AFEF">mkdir</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">build</span><span style="color: #ABB2BF"> &#x26;&#x26; </span><span style="color: #56B6C2">cd</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">build</span><span style="color: #ABB2BF"> </span><span style="color: #7F848E; font-style: italic"># 在项目目录</span></span>
</span><span class="code-line line-number" line="2"><span data-line=""><span style="color: #56B6C2">cd</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">build</span><span style="color: #ABB2BF"> &#x26;&#x26; </span><span style="color: #61AFEF">cmake</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">..</span><span style="color: #ABB2BF"> </span><span style="color: #7F848E; font-style: italic"># linus</span></span>
</span><span class="code-line line-number" line="3"><span data-line=""> </span>
</span><span class="code-line line-number" line="4"><span data-line=""><span style="color: #56B6C2">cd</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">build</span><span style="color: #ABB2BF"> &#x26;&#x26; </span><span style="color: #61AFEF">cmake</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">..</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-G</span><span style="color: #98C379">"Ninja"</span><span style="color: #ABB2BF"> </span><span style="color: #7F848E; font-style: italic"># win+msys2+mingw64+ninja</span></span>
</span><span class="code-line line-number" line="5"><span data-line=""><span style="color: #56B6C2">cd</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">build</span><span style="color: #ABB2BF"> &#x26;&#x26; </span><span style="color: #61AFEF">cmake</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">..</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-G</span><span style="color: #98C379">"MSYS Makefiles"</span><span style="color: #ABB2BF"> </span><span style="color: #7F848E; font-style: italic"># win+msys2+mingw64</span></span>
</span><span class="code-line line-number" line="6"><span data-line=""><span style="color: #61AFEF">cmake</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">..</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-G</span><span style="color: #98C379">"MSYS Makefiles"</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-DCMAKE_EXPORT_COMPILE_COMMANDS=1</span></span></span></code></pre></div>
<h2 id="12-cmake安装"><a class="anchor" href="#12-cmake安装"><span class="icon icon-link"></span></a>1.2 cmake安装</h2>
<p>方法一：</p>
<div data-rehype-pretty-code-fragment=""><pre style="background-color: #282c34" tabindex="0" data-language="bash" data-theme="default"><code class="code-highlight"><span class="code-line line-number" line="1"><span data-line=""><span style="color: #61AFEF">cmake</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">--build</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">.</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">--target</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">install</span></span>
</span><span class="code-line line-number" line="2"><span data-line=""><span style="color: #61AFEF">cmake</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">--build</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">.</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">--target</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">install</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">--config</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">release</span></span>
</span><span class="code-line line-number" line="3"><span data-line=""><span style="color: #61AFEF">make</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">install</span><span style="color: #ABB2BF"> </span><span style="color: #7F848E; font-style: italic"># 或者针对make构建工具</span></span></span></code></pre></div>
<p>方法二：</p>
<p>更加优雅的方法是在cmake3.15版本往后，使用cmake --install命令：</p>
<div data-rehype-pretty-code-fragment=""><pre style="background-color: #282c34" tabindex="0" data-language="bash" data-theme="default"><code class="code-highlight"><span class="code-line line-number" line="1"><span data-line=""><span style="color: #61AFEF">cmake</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">--install</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">.</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">--prefix</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">"../output"</span></span></span></code></pre></div>
<p>--install指定构建目录；--prefix指定安装路径，覆盖安装路径变量CMAKE_INSTALL_PREFIX。</p>
<h1 id="cmake打包"><a class="anchor" href="#cmake打包"><span class="icon icon-link"></span></a>cmake打包</h1>
<p>要使用打包功能，需要执行include(CPack)启用相关的功能。</p>
<p>include(CPack)会在构建路径(Build tree)下生成两个cpack的配置文件，CPackConfig.cmake和CPackSourceConfig.cmake，其实也就对应了两个构建目标：package和package_source；</p>
<p>配合cpack命令，使用-G参数指定生成器，常用的有ZIP、TGZ、7Z等，可以同时指定多个，格式也是CMake语法中的列表，例如其默认值"STGZ;TGZ"；--config参数可以指定打包配置文件，比如：</p>
<p>方法一：</p>
<div data-rehype-pretty-code-fragment=""><pre style="background-color: #282c34" tabindex="0" data-language="bash" data-theme="default"><code class="code-highlight"><span class="code-line line-number" line="1"><span data-line=""><span style="color: #61AFEF">cpack</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-G</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">TGZ</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">--config</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">CPackConfig.cmake</span></span>
</span><span class="code-line line-number" line="2"><span data-line=""><span style="color: #61AFEF">cpack</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">-G</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">TGZ</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">--config</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">CPackSourceConfig.cmake</span></span></span></code></pre></div>
<p>方法二：</p>
<p>当然也可以使用cmake命令：</p>
<div data-rehype-pretty-code-fragment=""><pre style="background-color: #282c34" tabindex="0" data-language="bash" data-theme="default"><code class="code-highlight"><span class="code-line line-number" line="1"><span data-line=""><span style="color: #61AFEF">cmake</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">--build</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">.</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">--target</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">package</span></span>
</span><span class="code-line line-number" line="2"><span data-line=""><span style="color: #61AFEF">cmake</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">--build</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">.</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">--target</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">package_source</span></span></span></code></pre></div>
<p>方法三：</p>
<p>如果使用make作为构建工具，可以简单地执行:</p>
<div data-rehype-pretty-code-fragment=""><pre style="background-color: #282c34" tabindex="0" data-language="bash" data-theme="default"><code class="code-highlight"><span class="code-line line-number" line="1"><span data-line=""><span style="color: #61AFEF">make</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">package</span></span>
</span><span class="code-line line-number" line="2"><span data-line=""><span style="color: #61AFEF">make</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">package_source</span></span></span></code></pre></div>c:T481,M12 3C7.0275 3 3 7.12937 3 12.2276C3 16.3109 5.57625 19.7597 9.15374 20.9824C9.60374 21.0631 9.77249 20.7863 9.77249 20.5441C9.77249 20.3249 9.76125 19.5982 9.76125 18.8254C7.5 19.2522 6.915 18.2602 6.735 17.7412C6.63375 17.4759 6.19499 16.6569 5.8125 16.4378C5.4975 16.2647 5.0475 15.838 5.80124 15.8264C6.51 15.8149 7.01625 16.4954 7.18499 16.7723C7.99499 18.1679 9.28875 17.7758 9.80625 17.5335C9.885 16.9337 10.1212 16.53 10.38 16.2993C8.3775 16.0687 6.285 15.2728 6.285 11.7432C6.285 10.7397 6.63375 9.9092 7.20749 9.26326C7.1175 9.03257 6.8025 8.08674 7.2975 6.81794C7.2975 6.81794 8.05125 6.57571 9.77249 7.76377C10.4925 7.55615 11.2575 7.45234 12.0225 7.45234C12.7875 7.45234 13.5525 7.55615 14.2725 7.76377C15.9937 6.56418 16.7475 6.81794 16.7475 6.81794C17.2424 8.08674 16.9275 9.03257 16.8375 9.26326C17.4113 9.9092 17.76 10.7281 17.76 11.7432C17.76 15.2843 15.6563 16.0687 13.6537 16.2993C13.98 16.5877 14.2613 17.1414 14.2613 18.0065C14.2613 19.2407 14.25 20.2326 14.25 20.5441C14.25 20.7863 14.4188 21.0746 14.8688 20.9824C16.6554 20.364 18.2079 19.1866 19.3078 17.6162C20.4077 16.0457 20.9995 14.1611 21 12.2276C21 7.12937 16.9725 3 12 3Z2:[["$","html",null,{"lang":"zh-CN","className":"flex flex-col h-full __className_a4da66","children":["$","body",null,{"suppressHydrationWarning":true,"className":"flex flex-col h-full px-2","children":["$","$L5",null,{"children":[["$","$L6",null,{}],["$","main",null,{"className":"text-black dark:text-white mx-0 px-2 py-0 flex-1 leading-6 justify-center","children":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L8",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","posts","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L8",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","posts","children",["id","cmake","d"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L8",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":[["$","div",null,{"className":"container mx-auto w-3/6","children":["$","article",null,{"className":"flex flex-col items-start justify-center w-full","children":[["$","h1",null,{"className":"font-extrabold text-2xl tracking-tight mb-0","children":"cmake"}],["$","div",null,{"className":"flex items-start justify-between w-full md:flex-row my-8","children":[["$","div",null,{"className":"flex items-center","children":[["$","$L9",null,{"alt":"Ling Yu","height":36,"width":36,"sizes":"20vw","src":"/images/favicon.ico","className":"rounded-full mt-0 mb-0","priority":true}],["$","div",null,{"className":"ml-2 text-sm text-gray-600 dark:text-gray-400","children":[["$","span",null,{"className":"flex text-black dark:text-gray-200 font-bold","children":"Ling Yu"}],["$","div",null,{"children":["Posted on ","Dec 12, 2022"]}]]}]]}],["$","div",null,{"className":"flex flex-col text-sm text-gray-600 dark:text-gray-400 min-w-32 md:mt-0","children":["$","div",null,{"children":["3 min read"," (",186," words)"]}]}]]}],["$","div",null,{"className":"w-full prose dark:prose-invert max-w-none mb-8","children":["$","section",null,{"dangerouslySetInnerHTML":{"__html":"$a"}}]}]]}]}],null],"segment":"__PAGE__?{\"id\":\"cmake\"}"},"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/6d53850f6c430e2d.css","precedence":"next"}]]}],"segment":["id","cmake","d"]},"styles":[]}],"segment":"posts"},"styles":[]}]}],["$","footer",null,{"className":"flex justify-between max-w-3xl container mx-auto p-2 text-gray-400 tracking-tight m-2","children":[["$","p",null,{"className":"py-2 text-gray-600 dark:text-gray-400","children":["© 2023 ",["$","$Lb",null,{"className":"hover:underline hover:text-black dark:hover:text-white underline-offset-[3px]","href":"https://github.com/shaijing","target":"_blank","children":"Ling Yu"}],". All rights reserved."]}],["$","ul",null,{"className":"flex items-center py-2","children":["$","li",null,{"children":["$","$Lb",null,{"className":"flex hover:text-black dark:hover:text-white","href":"https://github.com/shaijing","target":"_blank","children":["$","svg",null,{"width":"24","height":"24","fill":"currentColor","viewBox":"3 3 18 18","children":[["$","title",null,{"children":"GitHub"}],["$","path",null,{"d":"$c"}]]}]}]}]}]]}]]}]}]}],null]
3:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"cmake | Ling's Blog"}],["$","meta","2",{"name":"description","content":"Generated by Ling"}],["$","meta","3",{"name":"author","content":"Ling Yu"}],["$","link","4",{"rel":"author","href":"https://nextjs.org"}],["$","meta","5",{"name":"author","content":"NextJs"}],["$","meta","6",{"name":"generator","content":"Next.js"}],["$","meta","7",{"name":"keywords","content":"Blog,AI,ML"}],["$","meta","8",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","9",{"property":"og:title","content":"Ling's Blog"}],["$","meta","10",{"property":"og:description","content":"Developer and Writer."}],["$","meta","11",{"property":"og:url","content":"https://shaijing.github.io"}],["$","meta","12",{"property":"og:site_name","content":"https://shaijing.github.io"}],["$","meta","13",{"property":"og:locale","content":"zh-CN"}],["$","meta","14",{"property":"og:type","content":"website"}],["$","meta","15",{"name":"twitter:card","content":"summary"}],["$","meta","16",{"name":"twitter:title","content":"Ling's Blog"}],["$","meta","17",{"name":"twitter:description","content":"Developer and Writer."}],["$","link","18",{"rel":"icon","href":"https://shaijing.github.io/favicon.ico"}]]
